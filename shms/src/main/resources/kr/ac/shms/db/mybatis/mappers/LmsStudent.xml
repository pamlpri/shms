<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.shms.lms.student.dao.StudentDAO">
	<select id="student" parameterType="String" resultType="kr.ac.shms.lms.student.vo.StudentVO">
		SELECT stdnt_no,
		       sub_code,
		       entsch_de,
		       grdtn_de,
		       empmnt_at,
		       grade, 
		       name,
		       tel_no,
		       regno1,
		       regno2,
		       gen, 
		       zipcode, 
		       addr1,
		       addr2,
		       email,
		       webmail,
		       account,
		       bank_name,
		       photo_path,
		       semstr
		FROM student
		WHERE stdnt_no = #{stdnt_no, jdbcType=VARCHAR}
	</select>
	
	<sql id="loanCntFrag">
		FROM
		    book_loan
		where stdnt_no = #{stdnt_no, jdbcType=VARCHAR}
		  AND return_dt IS NULL
	</sql>
	
	<select id="bookLoanCnt" parameterType="String" resultType="hashMap">
		SELECT bookLoancnt, expiredcnt
		  FROM (
		SELECT
		    COUNT(*) bookLoancnt
		<include refid="loanCntFrag"></include>
		),
		(SELECT 
		    COUNT(*) expiredcnt
		<include refid="loanCntFrag"></include>
		<![CDATA[
		  AND return_exp_dt < SYSDATE)
		]]>
	</select>
		
	<select id="selectStdntInfoForCetf" parameterType="String" resultType="StudentVO">
		SELECT DISTINCT b.sub_name,
	      	   a.stdnt_no, 
		       a.name,
		       a.reginfo_stat
		  FROM V_STDNTINFO a
		 INNER JOIN subject b ON(a.sub_code=b.sub_code)
		 WHERE a.stdnt_no= #{stdnt_no, jdbcType=VARCHAR}
	</select>
	
	<select id="selectCetfList" resultType="ComCodeVO">
		SELECT com_code, 
		       com_code_nm
		  FROM tb_com_code
		 WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE CODE_GRP_NM = 'CRTF_KIND')
	</select>
	<select id="selectCetfResnList" resultType="ComCodeVO">
		SELECT com_code, 
		       com_code_nm
		  FROM tb_com_code
		 WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE CODE_GRP_NM = 'CRTF_REQ_RESN')
	</select>
	
	<update id="webMailUpdate" parameterType="String">
		UPDATE student
		    SET webmail = #{stdnt_no}||'@injae.ac.kr'
		WHERE
		    stdnt_no = #{stdnt_no}
	</update>
	
	<select id="subject" parameterType="String" resultType="SubjectVO">
		SELECT
		    sub_code,
		    sub_name,
		    col_code,
		    estbl_de,
		    reg_amt,
		    offrum_loc,
		    tel_no,
		    fax_no,
		    grdtn_pnt,
		    staff_no,
		    sub_index
		FROM
		    subject
		WHERE sub_code = #{sub_code}
	</select>
	
	<select id="regInfo" parameterType="String" resultType="MypageVO">
		SELECT
		    stdnt_no,
		    sub_code,
		    TO_CHAR(entsch_de, 'yyyy-mm-dd') entsch_de,
		    TO_CHAR(grdtn_de, 'yyyy-mm-dd') grdtn_de,
		    empmnt_at,
		    grade,
		    semstr,
		    name,
		    tel_no,
		    regno1,
		    regno2,
		    gen,
		    zipcode,
		    addr1,
		    addr2,
		    email,
		    webmail,
		    account,
		    bank_name,
		    photo_path,
		    reginfo_stat
		FROM
		    v_stdntinfo
		WHERE stdnt_no = #{stdnt_no}
	</select>
	
	<update id="mypageUpdate" parameterType="StudentVO">
		UPDATE student
	    SET
	        bank_name = #{bank_name}
	        , account = #{account}    
	        , tel_no = #{tel_no}
	        , email = #{email}      
	        , zipcode = #{zipcode}
	        , addr1 = #{addr1}
	        , addr2 = #{addr2}
		WHERE
		    stdnt_no = #{stdnt_no}
	</update>
	
	<select id="ReginfoList" parameterType="String" resultType="RegInfoCngVO">
		SELECT stdnt_no, 
		       req_de,
		       process_stat,
		       proc_date, 
		       refuse_resn, 
		       atch_file_no,
		       req_cl_code,
		       b.com_code_nm req_cl_name,
		       req_resn_code,
		       c.com_code_nm req_resn_code_name,
		       TO_CHAR(cng_bgnde, 'yyyy-mm-dd') cng_bgnde, 
		       TO_CHAR(cng_endde, 'yyyy-mm-dd') cng_endde
		FROM reginfo_cng a
		INNER JOIN tb_com_code b
		  ON(a.req_cl_code = b.com_code)
		INNER JOIN tb_com_code c
		  ON(a.req_resn_code = c.com_code)
		WHERE b.code_grp = (SELECT code_grp
		                      FROM tb_code_grp
		                     WHERE code_grp_nm = 'REQ_CL_CODE')
		  AND c.code_grp = (SELECT code_grp
		                      FROM tb_code_grp
		                     WHERE code_grp_nm = 'REQ_RESN_CODE')
		  AND stdnt_no = #{stdnt_no}
		  AND process_stat = 'WR'
		  ORDER BY cng_bgnde DESC
	</select>
	
	<select id="payCount" resultType="int" parameterType="String">
		SELECT count(*)
		FROM reg_fee_pay
		WHERE stdnt_no = #{stdnt_no}
	</select>
	
	<select id="reginfo" resultType="String" parameterType="String">
		SELECT req_cl_name
		FROM 
			(
				SELECT b.com_code_nm req_cl_name
				FROM reginfo_cng a
				INNER JOIN tb_com_code b
				  ON(a.req_cl_code = b.com_code)
				INNER JOIN tb_com_code c
				  ON(a.req_resn_code = c.com_code)
				WHERE b.code_grp = (SELECT code_grp
				                      FROM tb_code_grp
				                     WHERE code_grp_nm = 'REQ_CL_CODE')
				  AND c.code_grp = (SELECT code_grp
				                      FROM tb_code_grp
				                     WHERE code_grp_nm = 'REQ_RESN_CODE')
				  AND stdnt_no = #{stdnt_no}
				  AND process_stat = 'SI'
				  ORDER BY cng_bgnde DESC
			)
		WHERE ROWNUM = 1
	</select>
	
	<select id="advisorConsltReqList" parameterType="String" resultType="ConsultingVO">
		SELECT  req_no,
		        consult_cl,
		        b.com_code_nm consult_cl_nm,
		        TO_CHAR(req_date, 'YYYY-MM-DD') req_date,
		        TO_CHAR(hope_date, 'YYYY-MM-DD') hope_date,
		        TO_CHAR(hope_date, 'HH24:MI') hope_time,
		        req_cont,
		        process_stat,
		        c.com_code_nm process_stat_nm,
		        stdnt_no,
		        refuse_resn,
		        a.staff_no,
                d.name staff_name,
		        conslt_link
		FROM
		    conslt_req a
		INNER JOIN tb_com_code b
		ON(a.consult_cl = b.com_code)
		INNER JOIN tb_com_code c
		ON(a.process_stat = c.com_code)
        INNER JOIN staff d
        ON (a.staff_no = d.staff_no)
		WHERE b.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'CONSULT_CL')
		  AND c.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'PROCESS_STAT')
		  AND stdnt_no = #{stdnt_no}
          AND d.staff_no LIKE 'P%'
        ORDER BY req_date DESC 
	</select>
	
	<delete id="consultingDelete" parameterType="String">
		DELETE 
		FROM conslt_req
		WHERE req_no = #{req_no}
	</delete>
	
	<insert id="consultingInsert" parameterType="ConsultingVO">
		INSERT INTO CONSLT_REQ (req_no, consult_cl, req_date, hope_date, req_cont, process_stat, stdnt_no, staff_no)
		VALUES(
		    conslt_req_seq.NEXTVAL,
		    #{consult_cl, jdbcType=VARCHAR},
		    sysdate,
		    TO_DATE(#{hope_date}||' '||#{hope_time}, 'YYYY-MM-DD HH24:MI'),
		    #{req_cont, jdbcType=VARCHAR},
		    'DG',
		    #{stdnt_no, jdbcType=VARCHAR},
		    #{staff_no, jdbcType=VARCHAR}
		)
	</insert>
	
	<update id="consultingUpdate" parameterType="ConsultingVO">
		UPDATE CONSLT_REQ
		    SET consult_cl = #{consult_cl},
		        req_date = sysdate,
		        hope_date = TO_DATE(#{hope_date} || ' ' || #{hope_time}, 'YYYY-MM-DD HH24:MI'),
		        req_cont = #{req_cont}
		WHERE req_no = #{req_no}
	</update>
	
	<select id="sugangList" parameterType="String" resultType="SugangLecPRVO">
		SELECT
		    lec_code,
		    stdnt_no,
		    req_dt,
		    req_year,
		    req_semstr,
		    sugang_at
		FROM
		    sugang_req
		WHERE stdnt_no = #{stdnt_no}			
	</select>
	
	<select id="lecture" parameterType="String" resultType="LectureVO">
		SELECT
		    lec_code,
		    cur_code,
		    lec_cl,
		    estbl_year,
		    estbl_semstr,
		    summary,
		    tchmtr,
		    adi_tchmtr,
		    tchmtr_scope,
		    lec_rm,
		    dayotw,
		    lec_time,
		    abolec,
		    atch_file_no
		FROM
		    lecture
		WHERE lec_code = #{lec_code}
	</select>
	
	<select id="timeTable" parameterType="String" resultType="TimeTableVO">
		SELECT  c.lec_name, 
		        b.dayotw, 
		        b.lec_time, 
		        c.lec_pnt, 
		        a.stdnt_no, 
		        a.req_year, 
		        a.req_semstr,
		        a.lec_code, 
		        d.name, 
		        f.lecrum_nm, 
		        g.building_nm,
		        b.cur_code
		  FROM sugang_req a
		 INNER JOIN lecture b ON (a.lec_code = b.lec_code)
		 INNER JOIN curriculum c ON (b.cur_code = c.cur_code)
		 INNER JOIN staff d ON (c.staff_no = d.staff_no)
		 INNER JOIN lecrum_ttable e ON (b.lec_code = e.lec_code)
		 INNER JOIN lecrum f ON (e.lecrum_no = f.lecrum_no)
		 INNER JOIN building g ON (f.building_no = g.building_no)
		 WHERE stdnt_no=#{stdnt_no}
		   AND b.estbl_year >= TO_CHAR(SYSDATE, 'YYYY')
   		   AND b.estbl_semstr = (SELECT semstr FROM v_semstr)
   		   AND a.sugang_at = 'Y'
	</select>
	
	<select id="studentSubList" parameterType="StaffVO" resultType="MyPageVO">
		SELECT  st.stdnt_no,
		        st.sub_code,
		        su.sub_name,
		        st.entsch_de,
		        st.grdtn_de,
		        st.empmnt_at,
		        st.grade,
		        st.name,
		        st.tel_no,
		        st.regno1,
		        st.regno2,
		        st.gen,
		        st.zipcode,
		        st.addr1,
		        st.addr2,
		        st.email,
		        st.webmail,
		        st.account,
		        st.bank_name,
		        st.photo_path,
		        st.semstr,
		        st.reginfo_stat
	    FROM v_stdntinfo st
	    INNER JOIN subject su
	    ON st.sub_code = su.sub_code
	    <if test="sub_code != null">
		    WHERE st.sub_code = #{sub_code}	    
	    </if>
	    ORDER BY sub_name
	</select> 
	
	<select id="passwordUpdate" resultType="StudentVO">
		SELECT S.STDNT_NO, S.REGNO1, U.USER_ID aa
	    FROM STUDENT S
	    RIGHT OUTER JOIN USERS U
	    ON S.STDNT_NO = U.USER_ID
	    WHERE STDNT_NO LIKE 'S21%'
	</select>
	
	<update id="passUpdate" parameterType="UserLoginVO">
		UPDATE USERS
		SET USER_PASSWORD = #{user_password}
		WHERE USER_ID = #{user_id}
	</update>
	
	<select id="selectEditReqList" parameterType="String" resultType="EditReqVO">
		SELECT
		    edit_req_no,
		    req_title,
		    TO_CHAR(req_de, 'YYYY-MM-DD') req_de,
		    stdnt_no,
		    req_cont,
		    a.process_stat,
		    b.com_code_nm,
		    edit_date,
		    refuse_resn,
		    atch_file_no
		FROM
		    edit_req a
		INNER JOIN tb_com_code b
		ON a.process_stat = b.com_code
		WHERE stdnt_no = #{stdnt_no}
		AND b.code_grp = 'G10'
	</select>
	
	<insert id="insertEditReq" parameterType="EditReqVO">
		INSERT INTO edit_req (
		    edit_req_no,
		    req_title,
		    req_de,
		    stdnt_no,
		    req_cont,
		    process_stat
		    <if test="attachList != null">
			    ,atch_file_no
		  	</if>
		) VALUES (
		    EDIT_REQ_SEQ.NEXTVAL,
		    #{req_title},
		    SYSDATE,
		    #{stdnt_no},
		    #{req_cont},
		    'DG'
		    <if test="attachList != null">
		    	,(SELECT MAX(atch_file_no) + 1 FROM attach)
		    </if>
		)
	</insert>
		
	<resultMap type="EditReqVO" id="editReq" autoMapping="true">
		<id property="edit_req_no" column="edit_req_no"/>
		<collection property="attachList" ofType="AttachVO" autoMapping="true">
			<id property="atch_file_no" column="atch_file_no"/>
			<id property="atch_file_seq" column="atch_file_seq"/>
		</collection>
	</resultMap>
	<select id="selectEditReq" parameterType="int" resultMap="editReq">
		SELECT
		    edit_req_no,
		    req_title,
		    req_de,
		    stdnt_no,
		    req_cont,
		    process_stat,
		    edit_date,
		    refuse_resn,
		    a.atch_file_no,
		    atch_file_seq,
		    file_path,
		    file_nm,
		    file_cont_type,
		    file_size,
		    reg_date,
		    reg_user_id,
		    biz_type,
		    save_file_nm
		FROM
		    edit_req a
		LEFT OUTER JOIN attach b
		ON a.atch_file_no = b.atch_file_no
		WHERE edit_req_no = #{edit_req_no}
	</select>
	
	<update id="updateEditReq" parameterType="EditReqVO">
		UPDATE edit_req
		    SET
		        req_title = #{req_title},
		        req_cont = #{req_cont}
		WHERE
		    edit_req_no = #{edit_req_no}
	</update>
	
	<delete id="deleteEditReq" parameterType="EditReqVO">
		DELETE FROM edit_req
		WHERE
		    edit_req_no = #{edit_req_no}
	</delete>
	
	<select id="selectBookList" resultType="BookVO">
		SELECT *
		FROM (
		    SELECT  ROWNUM,
		            book_code,
		            book_name,
		            book_authr,
		            book_pubcom,
		            book_year,
		            book_isbn,
		            book_stat,
		            b.com_code_nm book_stat_nm
		    FROM book a
		    INNER JOIN tb_com_code b
		    ON a.book_stat = b.com_code
		    WHERE b.code_grp = 'G12'
		)
		WHERE ROWNUM BETWEEN 1 AND 100
	</select>
	
	<select id="selectBookLoanList" parameterType="String" resultType="BookVO">
		SELECT  loan_dtls_no,
		        stdnt_no,
		        a.book_code,
		        TO_CHAR(loan_dt, 'YYYY-MM-DD') loan_dt,
		        TO_CHAR(return_exp_dt, 'YYYY-MM-DD') return_exp_dt,
		        TO_CHAR(return_dt, 'YYYY-MM-DD') return_dt,
		        b.book_name,
		        b.book_authr,
		        b.book_pubcom
		FROM book_loan a
		INNER JOIN book b
		ON a.book_code = b.book_code
		WHERE stdnt_no = #{stdnt_no}
	</select>
	
	<select id="selectFacilityList" resultType="FacilityRsvVO">
		SELECT  facility_no,
		        facility_kind,
		        detail_no,
		        rsv_posbl_at,
		        b.com_code_nm
		FROM facility a
		INNER JOIN tb_com_code b
		ON a.facility_kind = b.com_code
		WHERE facility_no BETWEEN 1 AND 200
		AND b.code_grp = 'G22'
	</select>
	
	<select id="selectFacilityRsvList" parameterType="String" resultType="FacilityRsvVO">
		SELECT
		    rsv_no,
		    a.facility_no,
		    rsv_dt,
		    use_begin_dt,
		    use_end_dt,
		    real_bg_dt,
		    real_end_dt,
		    stdnt_no,
		    b.detail_no,
		    b.rsv_posbl_at
		FROM
		    facility_rsv a
		INNER JOIN facility b
		ON a.facility_no = b.facility_no
		WHERE stdnt_no = #{stdnt_no}
		ORDER BY rsv_dt DESC
	</select>
	
	<select id="selectFacilityRsv" parameterType="String" resultType="FacilityRsvVO">
		SELECT  rsv_no,
		        a.facility_no,
		        rsv_dt,
		        use_begin_dt,
		        use_end_dt,
		        real_bg_dt,
		        real_end_dt,
		        stdnt_no,
		        b.detail_no,
		        b.rsv_posbl_at
		FROM facility_rsv a
		INNER JOIN facility b
		ON a.facility_no = b.facility_no
		WHERE stdnt_no = #{stdnt_no}
		AND TO_CHAR(rsv_dt, 'YYYY-MM-DD') = TO_CHAR(SYSDATE, 'yyyy-mm-dd')
	</select>
	
	<insert id="insertFacilityRsv" parameterType="FacilityRsvVO">
		INSERT INTO facility_rsv (
				    rsv_no,
				    facility_no,
				    rsv_dt,
		            use_begin_dt,
		            use_end_dt,
				    stdnt_no
		) VALUES (
		    FACILITY_RSV_SEQ.NEXTVAL,
		    #{facility_no},
		    SYSDATE,
		    SYSDATE,
		    TO_DATE(TO_CHAR(SYSDATE+1,'YYYY-MM-DD')|| ' ' || '00:00:00', 'YYYY-MM-DD HH24:MI:SS'),
		    #{stdnt_no}
		)
	</insert>
	
	<update id="updateFacility" parameterType="int">
		UPDATE facility
		    SET
		        rsv_posbl_at = 'N'
		WHERE
		    facility_no = #{facility_no}
	</update>
	
	<update id="updateBgdt" parameterType="String">
		UPDATE facility_rsv
		SET real_bg_dt = SYSDATE
		WHERE stdnt_no = #{stdnt_no}
		AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(rsv_dt, 'YYYY-MM-DD')
	</update>
	
	<update id="updateEnddt" parameterType="String">
		UPDATE facility_rsv
		SET real_end_dt = SYSDATE
		WHERE stdnt_no = #{stdnt_no}
		AND TO_CHAR(SYSDATE, 'YYYY-MM-DD') = TO_CHAR(rsv_dt, 'YYYY-MM-DD')
	</update>
	
	<select id="updateRsvPosblAt" parameterType="map" statementType="CALLABLE">
    	{
    		CALL p_facilityupdate(#{updatecount,mode=OUT,jdbcType=NUMERIC,javaType=java.lang.Integer})
    	}
    </select>
</mapper>

