<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.shms.main.commuity.dao.BoardDAO">

	<select id="selectBoKind" parameterType="string" resultType="string">
		SELECT com_code
		  FROM tb_com_code
		WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'BO_KIND') 
		  AND com_code_nm = #{bo_name, jdbcType=VARCHAR}
	</select>
	
	<select id="selectForMain" parameterType="hashMap" resultType="BoardVO">
		SELECT * 
		  FROM(
		SELECT
		    (SELECT COUNT(*)
		      FROM board
		      WHERE bo_kind = (SELECT com_code
		                  FROM tb_com_code
		                WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'BO_KIND') 
		                  AND com_code_nm = #{bo_name, jdbcType=VARCHAR}))
		      - (ROW_NUMBER () OVER (ORDER BY bo_write_de DESC)) + 1 p_bo_no,
		    ROW_NUMBER () OVER (ORDER BY bo_write_de DESC) rn,
		    bo_no,
		    bo_kind,
		    bo_title,
		    TO_CHAR(bo_write_de, 'YYYY.MM.DD') bo_write_de,
		    bo_hit,
		    bo_writer
		FROM
		    board
		WHERE bo_kind = (SELECT com_code
		                  FROM tb_com_code
		                WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'BO_KIND') 
		                  AND com_code_nm = #{bo_name, jdbcType=VARCHAR})
		 <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(sub)">
		 	AND sub_code = #{sub, jdbcType=VARCHAR}
		 </if>
		 <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(stdnt_no)">
			 AND lec_code IN (
				  SELECT lec_code
				    FROM sugang_req
				   WHERE stdnt_no = #{stdnt_no, jdbcType=VARCHAR}
				     AND sugang_at = 'Y'
				     AND req_year = EXTRACT(YEAR FROM SYSDATE)
				     AND req_semstr = (SELECT semstr FROM student WHERE stdnt_no = #{stdnt_no, jdbcType=VARCHAR}))
		 </if>
 		 <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(staff_no)">
	 	     AND lec_code IN (
		         SELECT lec_code 
		          FROM lecture A
		         INNER JOIN curriculum B 
		            ON(A.cur_code = B.cur_code)
		         WHERE staff_no= #{staff_no, jdbcType=VARCHAR}
		           AND A.estbl_year = EXTRACT(YEAR FROM SYSDATE)
		           AND estbl_semstr = (SELECT semstr FROM v_semstr)
				)
		 </if>
		 )
		<![CDATA[
		WHERE RN <= 5		
		]]>
	</select>
	
	<sql id="searchFrag">
		<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
			<choose>
				<when test="searchMap.searchType eq 'title'">
					INSTR(bo_title, #{searchMap.searchWord}) > 0
				</when>
				<when test="searchMap.searchType eq 'content'">
					INSTR(bo_cont, #{searchMap.searchWord}) > 0
				</when>
				<when test="searchMap.searchType eq 'writer'">
					INSTR(bo_writer, #{searchMap.searchWord}) > 0
				</when>
				<otherwise>
					INSTR(bo_title, #{searchMap.searchWord}) > 0
					OR 
					INSTR(bo_cont, #{searchMap.searchWord}) > 0
					<if test="searchMap.bo_kind eq 'DM'">
						OR INSTR(bo_writer, #{searchMap.searchWord}) > 0 
					</if>
				</otherwise>
			</choose>
		</if>
	</sql>
	
	<select id="selectBoardCount" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		  FROM board
		 WHERE bo_kind = #{searchMap.bo_kind}
		<trim prefix="AND">
			<include refid="searchFrag"/>
		</trim>
	</select>
	
	<select id="selectBoardList" parameterType="PagingVO" resultType="BoardVO">
		SELECT *
			FROM (
			SELECT A.*, ROW_NUMBER () OVER (ORDER BY bo_write_de DESC) rn
				FROM (
					SELECT 
						(SELECT COUNT(*) FROM board WHERE bo_kind = #{searchMap.bo_kind})
						 - (ROW_NUMBER () OVER 
						(ORDER BY bo_write_de DESC)) + 1 p_bo_no,
						bo_no,
						bo_kind,
						DECODE(bo_secret_at, 'Y', '비밀글', bo_title) bo_title,
						bo_cont,
						bo_writer,
						TO_CHAR(bo_write_de, 'YYYY.MM.DD') bo_write_de, 
						bo_hit,
						bo_password, 
						bo_secret_at,
						bo_ans,
						a.univ_inqry_kind,
						b.com_code_nm inqry_kind_name 
					FROM board a
		            LEFT OUTER JOIN tb_com_code b
		            ON (a.univ_inqry_kind = b.com_code)
					WHERE bo_kind = #{searchMap.bo_kind}
					<if test="searchMap.bo_kind eq 'DM'">
		              AND b.code_grp =  (SELECT code_grp 
		                                  FROM tb_code_grp
		                                 WHERE code_grp_nm = 'UNIV_INQRY_KIND')
					</if>
				) A
		  	<trim prefix="WHERE">
		  		<include refid="searchFrag"/>
			</trim>
			)
			WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<resultMap type="BoardVO" id="boardMap" autoMapping="true">
		<id property="bo_no" column="bo_no"/>
		<collection property="attachList" ofType="kr.ac.shms.main.commuity.vo.AttachVO" autoMapping="true">
			<id property="atch_file_no" column="atch_file_no"/>
			<id property="atch_file_seq" column="atch_file_seq"/>
		</collection>
	</resultMap>
	<select id="selectBoard" parameterType="int" resultMap="boardMap">
		SELECT
		    bo_no,
		    bo_kind,
		    bo_title,
		    bo_cont,
		    bo_writer,
		    TO_CHAR(bo_write_de, 'YYYY.MM.DD') bo_write_de,
		    bo_password,
		    bo_secret_at,
		    bo_ans,
		    bo_hit,
		    sub_code,
		    univ_inqry_kind,
		    lec_code,
		    ans_writer,
		    ans_de,
		    a.atch_file_no,
		    b.atch_file_seq,
		    b.file_nm
		FROM
		    board a
		    LEFT OUTER JOIN attach b
		    ON(a.atch_file_no = b.atch_file_no)
		WHERE bo_no = #{bo_no, jdbcType=NUMERIC}
	</select>
	
	<update id="incrementHit" parameterType="int">
		UPDATE board 
		   SET bo_hit = bo_hit + 1 
		 WHERE bo_no = #{bo_no, jdbcType=NUMERIC}
	</update>
	
	<insert id="insertBoard" parameterType="BoardVO">
		<selectKey resultType="int" keyProperty="bo_no" order="BEFORE">			
			SELECT bo_no_seq.nextval
			FROM dual
		</selectKey>
			INSERT INTO board (
			    bo_no,
			    bo_kind,
			    bo_title,
			    bo_cont,
			    bo_writer,
			    bo_write_de,
			    bo_password,
			    bo_secret_at,
			    bo_hit,
			    sub_code,
			    univ_inqry_kind,
			    lec_code
			  	<if test="atch_file_no != null">
				    ,atch_file_no
			  	</if>
			) VALUES (
			    #{bo_no},
			    #{bo_kind, jdbcType=VARCHAR},
			    #{bo_title, jdbcType=VARCHAR},
			    #{bo_cont, jdbcType=VARCHAR},
			    #{bo_writer, jdbcType=VARCHAR},
			    SYSDATE,
			    #{bo_password, jdbcType=VARCHAR},
			    #{bo_secret_at, jdbcType=VARCHAR},
			    0,
			    #{sub_code, jdbcType=VARCHAR},
			    #{univ_inqry_kind, jdbcType=VARCHAR},
			    #{lec_code, jdbcType=VARCHAR}
			    <if test="atch_file_no != null">
			    	,(SELECT MAX(atch_file_no) + 1 FROM attach)
			    </if>
			)
	</insert>
	
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE board
		   SET
		    bo_title = #{bo_title, jdbcType=VARCHAR},
		    bo_cont = #{bo_cont, jdbcType=VARCHAR},
		    bo_secret_at = #{bo_secret_at, jdbcType=VARCHAR}
		WHERE bo_no = #{bo_no, jdbcType=NUMERIC}
	</update>

	<delete id="deleteBoard" parameterType="int">
		DELETE FROM board
			WHERE
			    bo_no = #{bo_no, jdbcType=NUMERIC}
	</delete>	
	
	<select id="attachList" parameterType="int" resultType="AttachVO">
		SELECT
		    A.atch_file_no,
		    atch_file_seq,
		    file_path,
		    file_nm,
		    file_cont_type,
		    file_size,
		    reg_date,
		    reg_user_id,
		    biz_type,
		    save_file_nm
		FROM
		    attach A
		RIGHT OUTER JOIN BOARD B
		ON (A.ATCH_FILE_NO = B.ATCH_FILE_NO)
		WHERE B.BO_NO = #{bo_no}
	</select>
	
	<insert id="insertAttatches" parameterType="BoardVO">
		<selectKey resultType="int" keyProperty="startAttNo" order="BEFORE">
			SELECT COUNT(*)+1 startAttNo
			FROM ATTACH
			WHERE atch_file_no = #{atch_file_no}
		</selectKey>
		INSERT ALL
		<foreach collection="attachList" item="attatch" index="idx">
		INTO ATTACH(
			atch_file_no,
		    atch_file_seq,
		    file_path,
		    file_nm,
		    file_cont_type,
		    file_size,
		    reg_date,
		    reg_user_id,
		    biz_type,
		    save_file_nm
	    )
		VALUES (
			#{atch_file_no}
			, #{startAttNo} + #{idx}
			, #{attatch.file_path,jdbcType=VARCHAR}
			, #{attatch.file_nm,jdbcType=VARCHAR}
			, #{attatch.file_cont_type,jdbcType=VARCHAR}
			, #{attatch.file_size,jdbcType=NUMERIC}
			, sysdate
			, #{attatch.reg_user_id,jdbcType=VARCHAR}
			, #{attatch.biz_type,jdbcType=VARCHAR}
			, #{attatch.save_file_nm,jdbcType=VARCHAR}
		)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<select id="atch_file_seqCount" resultType="int">
		SELECT COUNT(*)+1
		FROM ATTACH
		WHERE atch_file_no = #{atch_file_no}	
	</select>
	
	<select id="selectSaveNamesForDelete" parameterType="BoardVO" resultType="string">
		SELECT SAVE_FILE_NM
		FROM ATTACH
		WHERE ATCH_FILE_NO = ${atch_file_no}
		AND ATCH_FILE_SEQ IN 
		<foreach collection="delAttNos" item="attNo" open="(" close=")" separator=",">
			#{attNo}
		</foreach>
	</select>
	
	<delete id="deleteAttathes" parameterType="BoardVO">
		DELETE FROM ATTACH
		WHERE ATCH_FILE_NO = ${atch_file_no}
		AND ATCH_FILE_SEQ IN 
		<foreach collection="delAttNos" item="attNo" open="(" close=")" separator=",">
			#{attNo}
		</foreach>
	</delete>
	
	<select id="selectAttatch" parameterType="AttachVO" resultType="AttachVO">
		SELECT
			atch_file_no,
		    atch_file_seq,
		    file_path,
		    file_nm,
		    file_cont_type,
		    file_size,
		    reg_date,
		    reg_user_id,
		    biz_type,
		    save_file_nm
		FROM attach
		WHERE atch_file_no = #{atch_file_no}
		AND atch_file_seq = #{atch_file_seq}
	</select>
	
	<select id="selectGMCnt" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) cnt
		   FROM board
		 WHERE lec_code IN(
		         SELECT lec_code 
		          FROM lecture a
		         INNER JOIN curriculum b 
		            ON(a.cur_code = b.cur_code)
		         WHERE staff_no= #{staff_no, jdbcType=VARCHAR}
		           AND a.estbl_year = EXTRACT(YEAR FROM SYSDATE)
		           AND estbl_semstr = (SELECT semstr FROM v_semstr)
		 )
		 AND bo_kind = ( SELECT com_code
		                  FROM tb_com_code
		                 WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'BO_KIND')
		                  AND com_code_nm =  #{bo_name, jdbcType=VARCHAR})
		 AND bo_ans IS NULL
	</select>
</mapper>