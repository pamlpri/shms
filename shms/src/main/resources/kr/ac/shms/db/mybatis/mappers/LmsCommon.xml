<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.shms.lms.common.dao.LmsCommonDAO">
	<select id="selectDiet" resultType="DietVO">
		SELECT
		    diet_no,
		    TO_CHAR(diet_date, 'YYYY.MM.DD') diet_date,
		    diet_menu1,
		    diet_menu2,
		    diet_menu3,
		    diet_menu4,
		    diet_menu5,
		    diet_menu6,
		    diet_menu7
		FROM
		    diet
		WHERE diet_date = TO_CHAR(SYSDATE)
	</select>
	
	<select id="selectWebmailCnt" parameterType="String" resultType="hashMap">
		SELECT recvCnt, todayRecvCnt
		  FROM (
		SELECT COUNT(*) recvCnt
		  FROM tb_receiver A
		  INNER JOIN webmail B
		  ON(a.send_no = b.send_no)
		 WHERE receiver = #{user_id, jdbcType=VARCHAR}
		   AND read_at = 'N'
		), 
		(
		SELECT COUNT(*) todayRecvCnt
		  FROM tb_receiver A
		  INNER JOIN webmail B
		  ON(a.send_no = b.send_no)
		 WHERE receiver = #{user_id, jdbcType=VARCHAR}
		   AND read_at = 'N'
		   AND b.send_date = TO_CHAR(SYSDATE)
		)
	</select>
	
	<select id="selectTodaySchdul" resultType="ScheduleVO">
		 SELECT
		    schdul_no,
		    schdul_kind,
		    title,
		    cont,
		    TO_CHAR(begin_dt, 'HH24:MI') begin_dt,
		    TO_CHAR(end_dt, 'HH24:MI') end_dt
		FROM
		    schedule
		WHERE schdul_kind = (SELECT com_code FROM tb_com_code
		                      WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'SCHDUL_KIND')
		                        AND com_code_nm = '학사일정')
		AND TO_CHAR(SYSDATE, 'YYYY/MM/DD HH24:MI:SS')
			 BETWEEN TO_CHAR(begin_dt, 'YYYY/MM/DD HH24:MI:SS') AND TO_CHAR(end_dt, 'YYYY/MM/DD HH24:MI:SS')
	</select>
	
	<sql id="educList">
		SELECT
			    (SELECT COUNT(educ_no) FROM course_educ)
			      - (ROW_NUMBER () OVER(ORDER BY educ_reg_date DESC)) + 1 p_bo_no,
			    (ROW_NUMBER () OVER(ORDER BY educ_reg_date DESC)) rn,
			    educ_no,
			    educ_title,
			    educ_cont,
			    instrctr_nm,
			    instrctr_com,
			    a.lecrum_no,
			    c.building_nm||' '||b.lecrum_nm lecrum_info,
			    educ_nmpr,
			    educ_target,
		        TO_CHAR(educ_reg_date, 'YYYY.MM.DD HH24:MI') educ_reg_date,
			    TO_CHAR(educ_bgnde, 'YYYY.MM.DD HH24:MI') educ_bgnde,
			    TO_CHAR(educ_endde, 'YYYY.MM.DD HH24:MI') educ_endde,
			    TO_CHAR(educ_bgnde, 'YYYY.MM.DD') educ_date,
			    TO_CHAR(educ_bgnde, 'HH24:MI')||' - '||TO_CHAR(educ_endde, 'HH24:MI') educ_time
			FROM
			    course_educ a
			    INNER JOIN lecrum b
			    ON(a.lecrum_no = b.lecrum_no)
			    INNER JOIN building c
			    ON(b.building_no = c.building_no)
	</sql>
	<select id="selectCourseEducList" resultType="CourseEducVO">
		SELECT *
		  FROM(
			<include refid="educList" />
			<![CDATA[
			WHERE SYSDATE <= educ_bgnde
			)
			WHERE rn <= 5
			]]>
	</select>
	
	<select id="selectLmsBoardCnt" parameterType="hashMap" resultType="int">
		SELECT COUNT(bo_no) cnt
		  FROM board
		 WHERE bo_kind = (SELECT com_code
		                        FROM tb_com_code
		                       WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'BO_KIND')
		                         AND com_code_nm = #{bo_name, jdbcType=VARCHAR}
		                    )
		 AND bo_ans IS NULL
		 <choose>
		 	<when test="@org.apache.commons.lang3.StringUtils@isNotBlank(sub_code)">
		 		AND sub_code = #{sub_code, jdbcType=VARCHAR}
		 	</when>
		 	<otherwise>
		 		AND sub_code IS NULL
		 	</otherwise>
		 </choose>
	</select>
	
	<select id="selectEntDcList" resultType="kr.ac.shms.lms.common.vo.EntschtestDcVO">
		SELECT 
		    p_bo_no,
		    rn,
		    dc_no,
		    indvinfo_colct_agre_at,
		    dc_section,
		    dc_section_nm,
		    dc_target,
		    b.com_code_nm dc_target_nm,
		    hischul_code,
		    hischul_nm,
		    dc_rsv_date,
		    dc_rsv_time,
		    dc_end_time,
		    dc_rsv_per,
		    rsv_per_telno,
		    rsv_per_email,
		    rsv_per_password,
		    lecrum_info
		  FROM(
			SELECT
			    (SELECT COUNT(dc_no) FROM entschtest_dc)
			      - (ROW_NUMBER () OVER(ORDER BY dc_rsv_dt)) + 1 p_bo_no,
			    (ROW_NUMBER () OVER(ORDER BY dc_rsv_dt)) rn,
			    dc_no,
			    indvinfo_colct_agre_at,
			    dc_section,
			    b.com_code_nm dc_section_nm,
			    dc_target,
			    a.hischul_code,
			    DECODE(a.hischul_code, null, '-', c.hischul_nm) hischul_nm,
			    TO_CHAR(dc_rsv_dt, 'YYYY.MM.DD') dc_rsv_date,
			    TO_CHAR(dc_rsv_dt, 'HH24:MI') dc_rsv_time,
			    TO_CHAR(dc_end_dt, 'HH24:MI') dc_end_time,
			    dc_rsv_per,
			    rsv_per_telno,
			    rsv_per_email,
			    rsv_per_password,
			    DECODE(a.lecrum_no, null, '-',  e.building_nm||' '||d.lecrum_nm||'호') lecrum_info
			FROM
			    entschtest_dc a
			INNER JOIN tb_com_code b
			ON(a.dc_section = b.com_code)
			LEFT OUTER JOIN HIGHSCHOOL c
			ON(a.hischul_code = c.hischul_code) 
			LEFT OUTER JOIN lecrum d
			ON(a.lecrum_no = d.lecrum_no)
			LEFT OUTER JOIN building e
			ON(d.building_no = e.building_no)
			WHERE b.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'DC_SECTION')
			<![CDATA[
				  AND SYSDATE <= dc_rsv_dt
				) a
				INNER JOIN tb_com_code b
				ON(a.dc_target = b.com_code)
				WHERE b.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'DC_TARGET')
				  AND rn <= 5
			]]>
	</select>
	
	<select id="selectProfInfo" parameterType="String" resultType="StaffVO">
		SELECT
		    staff_no,
		    sub_code,
		    name,
		    webmail
		FROM
		    staff
		WHERE sub_code = #{sub_code, jdbcType=VARCHAR}
		  AND prof_at = 'Y'
	</select>
	
	<select id="selectFacilityRsvList" resultType="kr.ac.shms.lms.common.vo.FacilityRsvVO">
		SELECT *
		  FROM (
				SELECT
				    ROW_NUMBER () OVER(ORDER BY rsv_dt) rn,
				    rsv_no,
				    a.facility_no,
				    b.facility_kind,
				    DECODE(SIGN(a.facility_no - 100), -1, '제 1 ', 0, '제 1 ', 1, '제 2 ')||c.com_code_nm facility_nm,
				    DECODE(SIGN(a.facility_no - 100), -1, '제 1 ', 0, '제 1 ', 1, '제 2 ')||c.com_code_nm||' - '
				    ||DECODE(SIGN(a.facility_no - 100), -1, b.detail_no, 0, b.detail_no, 1, b.detail_no - 100) rsv_fac_info,
				    rsv_dt,
				    use_begin_dt,
				    use_end_dt,
				    real_bg_dt,
				    real_end_dt,
				    TO_CHAR(use_begin_dt, 'YYYY.MM.DD') use_begin_date,
				    TO_CHAR(use_begin_dt, 'HH24:MI') use_begin_time,
				    TO_CHAR(use_end_dt, 'HH24:MI') use_end_time,
				    TO_CHAR(real_bg_dt, 'YYYY.MM.DD') real_bg_date,
				    TO_CHAR(real_bg_dt, 'HH24:MI') real_bg_time,
				    TO_CHAR(real_end_dt, 'HH24:MI') real_end_time,
				    a.stdnt_no,
				    name stdnt_name
				FROM
				    facility_rsv a
				INNER JOIN facility b
				ON(a.facility_no = b.facility_no)
				INNER JOIN tb_com_code c
				ON(b.facility_kind = c.com_code)
				INNER JOIN student d
				ON(a.stdnt_no = d.stdnt_no)
				WHERE c.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'FACILITY_KIND')
				  AND TO_CHAR(SYSDATE, 'YYYY/MM/DD') = TO_CHAR(rsv_dt, 'YYYY/MM/DD')
			)
		<![CDATA[
		WHERE rn <= 5
		]]>
	</select>
	
	<select id="selectTestSchdulList" resultType="ScheduleVO">
		SELECT
		    schdul_no,
		    title,
		    cont,
		    TO_CHAR(begin_dt, 'YYYY.MM.DD')||' - '||TO_CHAR(end_dt, 'YYYY.MM.DD') schdul_period,
		    EXTRACT(YEAR FROM SYSDATE) year,
		    (SELECT semstr FROM v_semstr) semstr
		FROM
		    schedule
		WHERE title in ('성적입력', '성적정정', '성적조회')
		 AND SCHDUL_KIND = (SELECT com_code 
		                     FROM tb_com_code 
		                    WHERE code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'SCHDUL_KIND')
		                      AND com_code_nm = '학사일정')
	</select>
	
	<select id="selectGenCnt" parameterType="String" resultType="hashMap">
		WITH totalCnt AS
		(
		    SELECT COUNT(stdnt_no) totalCnt
		      FROM student
		     WHERE sub_code = #{sub_code, jdbcType=VARCHAR}
		)
		SELECT gen, 
		       COUNT(stdnt_no)/totalCnt * 100 rate 
		  FROM student, totalCnt
		WHERE sub_code = #{sub_code, jdbcType=VARCHAR}
		GROUP BY gen, totalCnt
	</select>
	
	<sql id="webmailSearchFrag">
		FROM    
		    webmail a
		INNER JOIN tb_receiver b
		ON(a.send_no = b.send_no)
		INNER JOIN v_userview c
		ON(a.sender = c.user_no)
		<choose>
			<when test="searchMap.selectMenu eq 'inbox'">
				WHERE b.receiver = #{searchMap.user_id, jdbcType=VARCHAR}
				  AND b.delete_at = 'N'
			</when>
			<otherwise>
				WHERE a.sender = #{searchMap.user_id, jdbcType=VARCHAR}
				  AND a.delete_at = 'N'
			</otherwise>
		</choose>
		  AND send_stat = 'Y'
		  <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
		  AND 
		    (INSTR(name, #{searchMap.searchWord, jdbcType=VARCHAR}) > 0
		        OR INSTR(title, #{searchMap.searchWord, jdbcType=VARCHAR}) > 0
		        OR INSTR(cont, #{searchMap.searchWord, jdbcType=VARCHAR}) > 0
		    )
		  </if>
	</sql>
	
	<select id="selectWebmailtotalCnt" resultType="int">
		SELECT
    		COUNT(a.send_no) total_cnt
    	<include refid="webmailSearchFrag"/>
	</select>
	
	<select id="selectWebmailList" parameterType="PagingVO" resultType="WebmailVO">
		SELECT *
		  FROM(
			SELECT
			    ROW_NUMBER () OVER (ORDER BY TO_CHAR(send_date, 'YYYY/MM/DD HH:MI:SS') DESC) rn,
			    a.send_no,
			    title,
			    cont,
			    read_at,
			    a.sender,
			    b.receiver,
			    name,
			    TO_CHAR(send_date, 'YYYY/MM/DD HH:MI AM', 'nls_date_language=american') send_date,
			    send_stat,
			    atch_file_no
		<include refid="webmailSearchFrag"/>
		)
		WHERE rn BETWEEN #{startRow, jdbcType=NUMERIC} AND #{endRow, jdbcType=NUMERIC}
	</select>
	
	<resultMap type="WebmailVO" id="webmailMap" autoMapping="true">
		<id property="send_no" column="send_no"/>
		<result property="sender_name" column="sender_name"/>
		<result property="sender_webmail" column="sender_webmail"/>
		<collection property="receiverList" ofType="ReceiverVO" autoMapping="true">
			<id property="receiver" column="receiver"/>
			<association property="user" javaType="UserVO" autoMapping="true">
				<id property="user_no" column="user_no"/>
			</association>
		</collection>
		<collection property="attachList" ofType="AttachVO" autoMapping="true">
			<id property="atch_file_no" column="atch_file_no"/>
			<id property="atch_file_seq" column="atch_file_seq"/>
		</collection>
	</resultMap>
	<select id="selectWebmail" parameterType="int" resultMap="webmailMap">
		SELECT
		    a.send_no,
		    title,
		    cont,
		    read_at,
		    sender,
		    d.name sender_name,
		    d.webmail sender_webmail,
		    receiver,
		    c.name,
		    c.webmail,
		    cc_at,
		    TO_CHAR(send_date, 'HH:MI AM', 'nls_date_language=american') send_date,
		    send_stat,
		    a.atch_file_no,
		    atch_file_seq,
		    file_path,
		    file_nm,
		    file_cont_type,
		    file_size,
		    reg_date,
		    reg_user_id,
		    biz_type,
		    save_file_nm
		FROM
		    webmail a
		INNER JOIN tb_receiver b
		ON(a.send_no = b.send_no)
		INNER JOIN v_userview c
		ON(b.receiver = c.user_no)
		INNER JOIN v_userview d
		ON(a.sender = d.user_no)
		LEFT OUTER JOIN attach e
		ON(a.atch_file_no = e.atch_file_no)
		WHERE a.send_no = #{send_no, jdbcType=VARCHAR}
	</select>
	
	<update id="updateReadAt" parameterType="int">
		UPDATE webmail
		    SET
		        read_at = 'Y'
		WHERE
		    send_no = #{send_no, jdbcType=NUMERIC}
	</update>
	
	<update id="deleteWebmail" parameterType="hashMap">
		<choose>
			<when test="selectMenu eq 'inbox'">
				UPDATE tb_receiver
			</when>
			<otherwise>
				UPDATE webmail
			</otherwise>
		</choose>
		    SET
		        delete_at = 'Y'
			WHERE
			    send_no IN(
		<choose>
			<when test="deletenos != null">
				<foreach collection="deletenos" item="send_no" separator=",">
					    #{send_no.value, jdbcType=NUMERIC}
				</foreach>
			</when>
			<otherwise>
				#{send_no, jdbcType=NUMERIC}
			</otherwise>
		</choose> 
				)
	</update>
	
	<select id="consulting" parameterType="int" resultType="ConsultingVO">
		SELECT  req_no,
		        consult_cl,
		        b.com_code_nm consult_cl_nm,
		        req_date,
		        TO_CHAR(hope_date, 'YYYY-MM-DD') hope_date,
		        TO_CHAR(hope_date, 'HH24:MI') hope_time,
		        req_cont,
		        process_stat,
		        c.com_code_nm process_stat_nm,
		        stdnt_no,
		        refuse_resn,
		        a.staff_no,
                d.name staff_name,
		        conslt_link
		FROM conslt_req a
		INNER JOIN tb_com_code b
		ON(a.consult_cl = b.com_code)
		INNER JOIN tb_com_code c
		ON(a.process_stat = c.com_code)
        INNER JOIN staff d
        ON (a.staff_no = d.staff_no)
		WHERE b.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'CONSULT_CL')
		  AND c.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'PROCESS_STAT')
          AND a.req_no = #{req_no}	
	</select>
	
	<insert id="consultingDiaryInsert" parameterType="ConsltDiaryVO">
		INSERT INTO conslt_diary (
		    diary_no,
		    req_no,
		    thema,
		    contents,
		    consult_date
		) VALUES (
		    CONSLT_DIARY_SEQ.NEXTVAL,
		    #{req_no},
		    #{thema},
		    #{contents},
		    TO_DATE(#{hope_date} || ' ' || #{hope_time}, 'YYYY-MM-DD HH24:MI:SS')
		)
	</insert>
	
	<select id="consltDiary" parameterType="int" resultType="ConsltDiaryVO">
		SELECT
		    diary_no,
		    req_no,
		    thema,
		    contents,
		    TO_CHAR(consult_date, 'YYYY-MM-DD HH24:MI:SS') consult_date
		FROM
		    conslt_diary
		WHERE req_no = #{req_no}
	</select>
	
	<update id="consultingCompletion" parameterType="int">
		UPDATE CONSLT_REQ SET
		    process_stat = 'WR'
		WHERE req_no = #{req_no}
	</update>
	
	<update id="consultingDiaryUpdate" parameterType="ConsltDiaryVO">
		UPDATE conslt_diary
		    SET thema = #{thema},
		        contents = #{contents}
		WHERE req_no = #{req_no}
	</update>
	
	<update id="updateNewPassword" parameterType="kr.ac.shms.lms.common.vo.UsersVO">
		UPDATE users
		   SET user_password = #{user_password, jdbcType=VARCHAR}
		 WHERE user_id = #{user_id, jdbcType=VARCHAR}
	</update>
	
	<select id="selectLecEvlList" parameterType="String" resultType="LecScoreVO">
		SELECT  a.SCRE_NO,
		        c.lec_name,
		        c.lec_pnt,
		        e.com_code_nm,
		        d.name,
		        a.STDNT_NO,
		        a.LEC_CODE,
		        b.cur_code
		FROM LEC_SCRE a
		INNER JOIN lecture b
		ON a.lec_code = b.lec_code
		INNER JOIN curriculum c
		ON b.cur_code = c.cur_code
		INNER JOIN staff d
		ON c.staff_no = d.staff_no
		INNER JOIN tb_com_code e
		ON b.lec_cl = e.com_code
		WHERE a.stdnt_no = #{stdnt_no}
		AND year = TO_CHAR(SYSDATE, 'YYYY')
		AND e.code_grp = 'G06'
	</select>
	
	<select id="selectEvlCheck" parameterType="LecScoreVO" resultType="LecScoreVO">
		SELECT DISTINCT lec_code
		FROM
		    lec_evl_res
		WHERE stdnt_no = #{stdnt_no}
		AND lec_code = #{lec_code}
	</select>
	
	<insert id="insertEvl" parameterType="LecEvlResVO">
		INSERT INTO lec_evl_res (
		    lec_evl_no,
		    queitm_no,
		    stdnt_no,
		    lec_code,
		    evl_cont
		) VALUES (
		    LEC_EVL_RES_SEQ.NEXTVAL,
		    #{queitm_no},
		    #{stdnt_no},
		    #{lec_code},
		    #{evl_cont}
		)
	</insert>
	
	<select id="selectAllCourseEducList" resultType="CourseEducVO">
		<include refid="educList" />
	</select>
	
	<select id="selectCourseEduc" parameterType="int" resultType="CourseEducVO">
		<include refid="educList" />
		WHERE educ_no = #{educ_no}
	</select>
	
	<select id="selectConsltReqList" parameterType="String" resultType="ConsultingVO">
		SELECT  req_no,
		        consult_cl,
		        b.com_code_nm consult_cl_nm,
		        TO_CHAR(req_date, 'YYYY-MM-DD') req_date,
		        TO_CHAR(hope_date, 'YYYY-MM-DD') hope_date,
		        TO_CHAR(hope_date, 'HH24:MI') hope_time,
		        req_cont,
		        process_stat,
		        c.com_code_nm process_stat_nm,
		        stdnt_no,
		        refuse_resn,
		        a.staff_no,
                d.name staff_name,
		        conslt_link
		FROM
		    conslt_req a
		INNER JOIN tb_com_code b
		ON(a.consult_cl = b.com_code)
		INNER JOIN tb_com_code c
		ON(a.process_stat = c.com_code)
        INNER JOIN staff d
        ON (a.staff_no = d.staff_no)
		WHERE b.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'CONSULT_CL')
		  AND c.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'PROCESS_STAT')
		  AND stdnt_no = #{stdnt_no}
          AND d.staff_no LIKE 'E%'
	</select>
	
	<select id="selectLectureEvaluationCnt" parameterType="String" resultType="int">
		SELECT COUNT(DISTINCT A.LEC_CODE) CNT
		FROM LEC_EVL_RES A
		INNER JOIN SUGANG_REQ B
		ON A.LEC_CODE = B.LEC_CODE
		WHERE A.STDNT_NO = #{stdnt_no}
		AND REQ_YEAR = TO_CHAR(SYSDATE,'YYYY')
		AND REQ_SEMSTR = 1
		AND SUGANG_AT = 'Y'
	</select>
	
	<select id="selectLectureCnt" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM SUGANG_REQ
		WHERE STDNT_NO = #{stdnt_no}
		AND REQ_YEAR = TO_CHAR(SYSDATE,'YYYY')
		AND REQ_SEMSTR = 1
		AND SUGANG_AT = 'Y'
	</select>
</mapper>