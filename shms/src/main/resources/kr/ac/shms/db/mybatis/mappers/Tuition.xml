<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.shms.lms.student.dao.TuitionDAO">
	<select id="selectTuitionList" parameterType="String" resultType="TuitionVO">
		SELECT DISTINCT pay_year,
		       pay_semstr,
		         (SELECT CASE WHEN com_code_nm='복학' THEN '재학'
			                  ELSE '재학'
			              END   
			       FROM tb_com_code
			      WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_CL_CODE')
			        AND com_code = req_cl_code) req_cl_code,
		       TO_CHAR(pay_amt, '999,999,999') pay_amt,
		       TO_CHAR(pay_dt, 'RRRR/MM/DD') pay_dt,
		       TO_CHAR(c.reg_amt, '999,999,999') reg_amt,
		       TO_CHAR(reg_amt - pay_amt, '999,999,999') reciv_amt
		  FROM reg_fee_pay a
		 INNER JOIN student b ON(a.stdnt_no=b.stdnt_no)
		 INNER JOIN subject c ON(b.sub_code=c.sub_code)
		 LEFT OUTER JOIN schl_req d ON(a.stdnt_no=d.stdnt_no)
		 LEFT OUTER JOIN reciv_schl e ON(d.req_no=e.req_no)
		 LEFT OUTER JOIN reginfo_cng f ON(b.stdnt_no=f.stdnt_no)
		 WHERE a.stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		 ORDER BY pay_year asc
	</select>
	
	<select id="selectTuitionBill" parameterType="String" resultType="TuitionVO">
		SELECT DISTINCT a.stdnt_no, 
				       grade, 
				       name,
				       b.sub_name,
				       TO_CHAR(b.reg_amt, 'FM999,999,999') reg_amt,
				       b.reg_amt regAmt,
				       EXTRACT(YEAR FROM SYSDATE) year
				  FROM student a
				 INNER JOIN subject b ON(a.sub_code=b.sub_code)
				 INNER JOIN sugang_req c ON(a.stdnt_no=c.stdnt_no)
				 WHERE a.stdnt_no= #{stdnt_no}
				   AND req_year=EXTRACT(YEAR FROM SYSDATE)
				   AND req_semstr = (SELECT semstr FROM v_semstr)
	</select>
	<select id="selectTuitionPaySchdule" resultType="ScheduleVO">
		SELECT title,
		       TO_NUMBER(TO_CHAR(begin_dt, 'YYYY')) year,
		       EXTRACT(MONTH FROM begin_dt) start_month,
		       EXTRACT(DAY FROM begin_dt) start_day,
		       EXTRACT(DAY FROM end_dt) end_day
		  FROM schedule a
		 WHERE title = TO_CHAR(EXTRACT(YEAR FROM SYSDATE))||'학년도 '||        
	    		TO_CHAR((SELECT semstr FROM v_semstr))||'학기 등록금 수납 기간'
	</select>
	<select id="selectTuitionReceipt" parameterType="String" resultType="TuitionVO">
		SELECT DISTINCT b.sub_name,
		       a.grade,
		       a.stdnt_no,
		       a.name,
		       TO_CHAR(b.reg_amt, '999,999,999') reg_amt,
		       c.pay_dt,
		       EXTRACT(YEAR FROM c.pay_dt) year,
		       EXTRACT(MONTH FROM c.pay_dt) month,
		       EXTRACT(DAY FROM c.pay_dt) day,
		       b.reg_amt regAmt,
		       pay_amt,
		       pay_dtls_no
		  FROM student a
		 INNER JOIN subject b ON(a.sub_code=b.sub_code)
		 INNER JOIN reg_fee_pay c ON(a.stdnt_no=c.stdnt_no)
		 INNER JOIN schl_req c ON(a.stdnt_no=c.stdnt_no)
		 WHERE a.stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		   AND EXTRACT(YEAR FROM c.pay_dt) =EXTRACT(YEAR FROM SYSDATE)
<!-- 		   AND EXTRACT(YEAR FROM c.pay_dt) = 2020 -->
		   AND pay_semstr = (SELECT semstr FROM V_SEMSTR)
	</select>
	
	<select id="selectRefundResn" resultType="ComCodeVO">
		 SELECT com_code_nm,
		        com_code
		   FROM tb_com_code
		  WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_RESN_CODE')
	</select>
	
	<select id="selectRefundAmt" resultType="TuitionVO" parameterType="String">
		<![CDATA[
		SELECT pay_dtls_no,
		       CASE WHEN SYSDATE-startHG <= 30 THEN TO_CHAR(FLOOR(pay_amt*5/6), '999,999,999')
		            WHEN SYSDATE-startHG > 30 and SYSDATE-startHG <= 60 THEN TO_CHAR(FLOOR(pay_amt*2/3), '999,999,999')
		            WHEN SYSDATE-startHG > 60 AND SYSDATE-startHG <= 90 THEN TO_CHAR(FLOOR(pay_amt*1/2), '999,999,999')
		       END AS refund
		  FROM(
		SELECT pay_amt,
		       pay_dt,
		       (SELECT begin_dt
		          FROM schedule a
		         WHERE title = TO_CHAR(EXTRACT(YEAR FROM SYSDATE))||'학년도 '||        
		            TO_CHAR((SELECT semstr FROM v_semstr))||'학기 등록금 수납 기간') startHG,
		       pay_dtls_no
		  FROM reg_fee_pay 
		 WHERE stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		   AND pay_year=EXTRACT(YEAR FROM SYSDATE)
		   AND pay_semstr=(SELECT semstr FROM v_semstr))
		   ]]>
	</select>
	<!-- 장학금 수혜 -->
	<select id="selectRecivSchl" parameterType="String" resultType="int">
		SELECT NVL(SUM(reciv_amt),0) recivAmt
		  FROM schl_req a
		 INNER JOIN reciv_schl b
		   ON(a.req_no = b.req_no)
		 WHERE stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		   AND EXTRACT(YEAR FROM reciv_date)=EXTRACT(YEAR FROM SYSDATE)
	</select>
	<insert id="insertRefundReq" parameterType="TuitionVO">
		INSERT INTO reg_fee_re (
				    req_no,
				    pay_dtls_no,
				    req_dt,
				    req_resn,
				    refund_amt,
				    process_stat,
				    refuse_resn,
				    refund_dt
			) VALUES (
			    REG_RE_SEQ.NEXTVAL,
			    #{pay_dtls_no, jdbcType=NUMERIC},
			    SYSDATE,
			    #{req_resn, jdbcType=VARCHAR},
			    #{refund_amt, jdbcType=NUMERIC},
			    'DG',
			    NULL,
			    NULL
			)
	</insert>
	
	<select id="selectRefundReqList" parameterType="String" resultType="RefundReqVO">
		SELECT req_no,
		       (SELECT com_code_nm
		          FROM tb_com_code
		         WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_RESN_CODE')
		           AND com_code = req_resn) req_resn,
		       TO_CHAR(refund_amt, '999,999,999') refund,
		       TO_CHAR(req_dt, 'RRRR.MM.DD') req_dt,
		       TO_CHAR(refund_dt, 'RRRR.MM.DD') refund_dt,
		       (SELECT com_code_nm
		          FROM tb_com_code
		         WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
		           AND com_code = process_stat) process_stat,
		        refuse_resn
		  FROM reg_fee_re a
		 INNER JOIN reg_fee_pay b ON(a.pay_dtls_no=b.pay_dtls_no)
		 WHERE stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
	</select>
	
	<select id="selectRefundCount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		  FROM reg_fee_re
		 WHERE pay_dtls_no = (
		               		SELECT pay_dtls_no
			                  FROM reg_fee_pay
			                 WHERE TO_CHAR(pay_dt, 'yyyy') = TO_CHAR(SYSDATE, 'yyyy')
			                   AND stdnt_no = #{stdnt_no, jdbcType=VARCHAR}
			                   AND pay_semstr = (SELECT semstr
			                                       FROM student
			                                      WHERE stdnt_no = #{stdnt_no, jdbcType=VARCHAR})
			                    )
	</select>
	
	<select id="selectRecivSchlList" parameterType="String" resultType="ScholarShipVO">
		SELECT EXTRACT(YEAR FROM reciv_date) reciv_year,
		       c.semstr,
		       d.schlship_nm,
		       TO_CHAR(reciv_amt, '999,999,999') recivAmt,
		       TO_CHAR(reciv_date, 'RRRR.MM.DD') reciv_date
		  FROM reciv_schl a
		 INNER JOIN schl_req b ON(a.req_no=b.req_no)
		 INNER JOIN student c ON(b.stdnt_no=c.stdnt_no)
		 INNER JOIN schlship d ON(b.schlship_no=d.schlship_no)
		 WHERE c.stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		   AND process_stat='SI'
		   AND c.semstr=(SELECT semstr FROM v_semstr)
	</select>
	<select id="selectSchlReqList" parameterType="String" resultType="ScholarShipVO">
		SELECT ROW_NUMBER() OVER(ORDER BY req_de desc) rn, 
		       req_no,
		       TRIM(SUBSTR(b.schlship_nm, 0, INSTR(b.schlship_nm, ' ', 1))) schlship_nm,
		       TO_CHAR(req_de, 'RRRR.MM.DD') req_de,
		       CASE WHEN papers_submit_at='Y' THEN '제출완료'
		            ELSE '미제출'
		            END AS papers_submit_at,
		       (SELECT com_code_nm
		          FROM tb_com_code
		         WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
		           AND com_code = process_stat) process_stat
		  FROM schl_req a
		 INNER JOIN schlship b ON(a.schlship_no=b.schlship_no)
		 WHERE stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		   AND staff_no IS NULL
	</select>
	
	<select id="selectStudent" parameterType="String" resultType="StudentVO">
		SELECT stdnt_no,
		       name,
		       sub_name,
		       grade,
		       a.tel_no,
		       a.tel_no,
		       CASE WHEN webmail IS NOT NULL THEN webmail
		            WHEN webmail IS NULL THEN email
		            END AS webmail
		  FROM v_stdntinfo a
		 INNER JOIN subject b ON(a.sub_code=b.sub_code) 
		 WHERE stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
	</select>
	
	<insert id="insertSchl" parameterType="ScholarShipVO">
	INSERT INTO schl_req (
		    req_no,
		    stdnt_no,
		    req_de,
		    req_resn,
		    process_stat,
		    papers_submit_at,
		    refuse_resn,
		    schlship_no,
		    staff_no
		    <if test="attachList != null">
		    	,atch_file_no
		    </if>
		) VALUES (
		    SCHL_REQ_SEQ.NEXTVAL,
		    #{bo_writer, jdbcType=VARCHAR},
		    SYSDATE,
		    NULL,
		    'DG'
		    <if test="attachList != null">
		    , 'Y',
		    </if>
		    <if test="attachList == null">
		    , 'N',
		    </if>
		    NULL,
		    #{schlship_no, jdbcType=NUMERIC},
		    NULL
		    <if test="attachList != null">
		    	,(SELECT MAX(atch_file_no) + 1 FROM attach)
		    </if>
		)
	</insert>
	
	<select id="selectAttachList" resultType="AttachVO" parameterType="int">
		SELECT file_nm,
		       atch_file_no,
		       atch_file_seq
		  FROM attach a 
		 WHERE atch_file_no=(SELECT atch_file_no FROM schl_req WHERE req_no=#{req_no, jdbcType=NUMERIC})
	</select>
	
	<resultMap type="ScholarShipVO" id="schl" autoMapping="true">
		<id property="req_no" column="req_no"/>
		<collection property="attachList" ofType="AttachVO" autoMapping="true">
			<id property="atch_file_no" column="atch_file_no"/>
			<id property="atch_file_seq" column="atch_file_seq"/>
		</collection>
	</resultMap>
	<select id="selectSchlReqStudent" parameterType="ScholarShipVO" resultMap="schl">
		SELECT a.req_no,
		       TO_CHAR(req_de, 'RRRR.MM.DD') req_de,
		       SUBSTR(b.schlship_nm, 0, INSTR(b.schlship_nm, ' ', 1)) schlship_nm,
		       (SELECT com_code_nm
		          FROM tb_com_code
		         WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
		           AND com_code = process_stat) process_stat,
		        TO_CHAR(reciv_date, 'RRRR.MM.DD') reciv_date,
                a.atch_file_no,
                atch_file_seq,
                file_path,
                file_nm,
                file_cont_type,
                file_size,
                reg_date,
                reg_user_id,
                biz_type,
                save_file_nm
		  FROM schl_req a
		 INNER JOIN schlship b ON(a.schlship_no=b.schlship_no)
		  LEFT OUTER JOIN reciv_schl d ON(a.req_no=d.req_no)
          LEFT OUTER JOIN attach e ON(a.atch_file_no=e.atch_file_no) 
		 WHERE a.stdnt_no=#{stdnt_no, jdbcType=VARCHAR}
		   AND a.req_no = #{req_no, jdbcType=NUMERIC}
	</select>
	
	<delete id="deleteSchl" parameterType="ScholarShipVO">
		DELETE 
		  FROM schl_req
		  WHERE req_no = #{req_no, jdbcType=NUMERIC}
	</delete>
	
	<insert id="insertTuitionPayment" parameterType="String">
		INSERT INTO reg_fee_pay (
				    pay_dtls_no,
				    stdnt_no,
				    pay_amt,
				    pay_dt,
				    pay_year,
				    pay_semstr
		) VALUES (
		    REG_PAY_SEQ.NEXTVAL,
		    #{stdnt_no},
		    (
		        SELECT DISTINCT c.REG_AMT
		        FROM
		            reg_fee_pay a
		        LEFT OUTER JOIN student b
		        ON a.STDNT_NO = b.STDNT_NO
		        INNER JOIN subject c
		        ON b.sub_code = c.sub_code
		        WHERE a.stdnt_no = #{stdnt_no}
		    ),
		    SYSDATE,
		    TO_CHAR(SYSDATE, 'YYYY'),
		    (
		        SELECT semstr 
		        FROM v_semstr
		    )
		)
	</insert>
	
	<select id="selectTuitionCnt" parameterType="String" resultType="int">
		SELECT
		    count(*) cnt
		FROM
		    reg_fee_pay
		WHERE stdnt_no = #{stdnt_no}
		AND TO_CHAR(SYSDATE, 'YYYY') = pay_year
		AND (SELECT semstr FROM v_semstr) = pay_semstr
	</select>
</mapper>
