<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.shms.lecture.dao.LectureProfessorDAO">
	<select id="staff" parameterType="String" resultType="kr.ac.shms.common.vo.StaffVO">
		SELECT
		    staff_no,
		    dept_code,
		    sub_code,
		    emp_section,
		    encpn_de,
		    retire_de,
		    contract_endde,
		    staff_rspofc,
		    prof_at,
		    name,
		    tel_no,
		    regno1,
		    regno2,
		    gen,
		    zipcode,
		    addr1,
		    addr2,
		    email,
		    webmail,
		    account,
		    bank_name,
		    photo_path
		FROM
		    staff
		WHERE staff_no = #{staff_no, jdbcType=VARCHAR}
	</select>
	
	<sql id="taskSearchFrag">
		 WHERE lec_code IN(
	        SELECT lec_code 
	         FROM lecture a
	        INNER JOIN curriculum b 
	           ON(a.cur_code = b.cur_code)
	        WHERE staff_no= #{staff_no, jdbcType=VARCHAR}
	          AND a.estbl_year = EXTRACT(YEAR FROM SYSDATE)
	          AND estbl_semstr = (SELECT semstr FROM v_semstr)
	</sql>
	
	<select id="selectTask" parameterType="String" resultType="SetTaskVO">
		SELECT set_task_no,
		       a.lec_code,
		       task_reg_de,
		       submit_bgnde,
		       submit_endde,
		       task_title,
		       task_cont,
		       task_allot,
		       atch_file_no,
		       submit_cnt,
		       total_cnt
		  FROM (
		SELECT a.set_task_no,
		       lec_code,
		       TO_CHAR(task_reg_de, 'YYYY.MM.DD') task_reg_de,
		       TO_CHAR(submit_bgnde, 'YYYY.MM.DD') submit_bgnde,
		       TO_CHAR(submit_endde, 'YYYY.MM.DD') submit_endde,
		       task_title,
		       task_cont,
		       task_allot,
		       a.atch_file_no,
		       COUNT(b.submit_no) OVER (PARTITION BY a.set_task_no) submit_cnt
		  FROM SET_TASK a
		 LEFT OUTER JOIN task_submit b
		 ON(a.set_task_no = b.set_task_no)
			<include refid="taskSearchFrag"/>
		           AND TO_CHAR(SYSDATE) BETWEEN submit_bgnde AND submit_endde
		 )
		 ) a INNER JOIN 
		 (
		    SELECT
		        lec_code,
		        COUNT(stdnt_no) total_cnt
		      FROM sugang_req
			<include refid="taskSearchFrag"/>
		               AND sugang_at = 'Y' 
		        )
		     GROUP BY lec_code
		 ) b
		 ON (a.lec_code = b.lec_code)	
	</select>
	
	<select id="selectTodayLecList" parameterType="String" resultType="LectureVO">
		SELECT lec_code,
		       LPAD(lec_time, 2, '0')||':00 - '||
		       LPAD(lec_time + lec_pnt, 2, '0')||':00' lec_full_time,
		       lec_name
		  FROM lecture a
		 INNER JOIN curriculum b
		   ON(a.cur_code = b.cur_code)
		 WHERE staff_no = #{staff_no, jdbcType=VARCHAR}
		   AND abolec = 'N'
		   AND a.estbl_year = EXTRACT(YEAR FROM SYSDATE)
		   AND estbl_semstr = (SELECT semstr FROM v_semstr)
		   AND TO_NUMBER(dayotw) = (SELECT TO_CHAR(SYSDATE, 'D') FROM DUAL)
	</select>
	
	<select id="selectLecListForOpen" parameterType="String" resultType="LectureVO">
		SELECT lec_code, lec_name 
		  FROM lecture a 
		 INNER JOIN curriculum b 
		    ON(a.cur_code = b.cur_code) 
		 WHERE a.estbl_year = EXTRACT(YEAR FROM SYSDATE)
		   AND a.estbl_semstr = (SELECT semstr FROM v_semstr)
		   AND b.staff_no = #{staff_no, jdbcType=VARCHAR}
		   AND summary IS NULL
	</select>
	
	<select id="selectLecForOpen" parameterType="String" resultType="SugangVO">
		SELECT 
		    lec_code,
		    cur_code,
		    lec_cl,
		   (SELECT com_code_nm
		      FROM tb_com_code
		     WHERE code_grp = 'G06'
		       AND lec_cl = com_code ) lec_cl_nm,
		    lec_name,
		    estbl_year,
		    estbl_semstr,
		    summary,
		    tchmtr,
		    adi_tchmtr,
		    tchmtr_scope,
		    lec_rm,
		    dayotw,
		   (SELECT com_code_nm
		      FROM tb_com_code
		     WHERE code_grp = 'G19'
		       AND dayotw = com_code ) dayotw_nm,
		    (lec_time - 8) || ' - ' || (lec_time + lec_pnt - 8 - 1) || '교시' lec_full_time,
		    abolec,
		    staff_no,
		    name,
		    atch_file_no
			  FROM(
				SELECT 
				    lec_code,
				    a.cur_code,
				    a.lec_cl,
				    b.lec_name,
				    a.estbl_year,
				    a.estbl_semstr,
				    summary,
				    tchmtr,
				    adi_tchmtr,
				    tchmtr_scope,
				    lec_rm,
				    dayotw,
				    lec_time,
				    abolec,
				    b.staff_no,
				    lec_pnt,
				    c.name,
				    atch_file_no
				 FROM lecture a
				INNER JOIN curriculum b 
				ON(a.cur_code = b.cur_codE)
				INNER JOIN staff c
				ON(b.staff_no = c.staff_no)
				WHERE a.lec_code = #{lec_code, jdbcType=VARCHAR}
			) 
	</select>
	
	<update id="updateLecture" parameterType="SugangVO">
		UPDATE lecture
		    SET
	        summary = #{summary, jdbcType=VARCHAR},
	        tchmtr = #{tchmtr, jdbcType=VARCHAR},
	        adi_tchmtr = #{adi_tchmtr, jdbcType=VARCHAR}
  			<if test="attachList != null">
			    , atch_file_no = (SELECT MAX(atch_file_no) + 1 FROM attach)
			</if>
		WHERE
		    lec_code = #{lec_code, jdbcType=VARCHAR}
	</update>
	
	<insert id="insertLectureDetails" parameterType="SugangVO">
		INSERT INTO lec_score_st (
		    lec_code,
		    midterm,
		    finals,
		    attend,
		    task,
		    etc
		) VALUES (
		    #{lec_code, jdbcType=VARCHAR},
		    #{midterm, jdbcType=NUMERIC} / 100,
		    #{finals, jdbcType=NUMERIC} / 100,
		    #{attend, jdbcType=NUMERIC} / 100,
		    #{task, jdbcType=NUMERIC} / 100,
		    #{etc, jdbcType=NUMERIC} / 100
		)
	</insert>
	
	<insert id="insertAttaches" parameterType="SugangVO">
		<selectKey resultType="int" keyProperty="startAttNo" order="BEFORE">
			SELECT COUNT(*) + 1 startAttNo
			FROM ATTACH
			WHERE atch_file_no = (SELECT MAX(atch_file_no) + 1 FROM attach)
		</selectKey>
		INSERT ALL
		<foreach collection="attachList" item="attatch" index="idx">
			INTO ATTACH(
				atch_file_no,
			    atch_file_seq,
			    file_path,
			    file_nm,
			    file_cont_type,
			    file_size,
			    reg_date,
			    reg_user_id,
			    biz_type,
			    save_file_nm
		    )
			VALUES (
				(SELECT MAX(atch_file_no) + 1 FROM attach)
				, #{startAttNo} + #{idx}
				, #{attatch.file_path,jdbcType=VARCHAR}
				, #{attatch.file_nm,jdbcType=VARCHAR}
				, #{attatch.file_cont_type,jdbcType=VARCHAR}
				, #{attatch.file_size,jdbcType=NUMERIC}
				, sysdate
				, #{staff_no, jdbcType=VARCHAR}
				, 'GG'
				, #{attatch.save_file_nm,jdbcType=VARCHAR}
			)
		</foreach>
			SELECT * FROM DUAL
	</insert>
	
	<update id="updateLectureDetails" parameterType="SugangVO">
		UPDATE lec_score_st
		    SET
			   midterm = #{midterm, jdbcType=NUMERIC} / 100,
			   finals = #{finals, jdbcType=NUMERIC} / 100,
			   attend = #{attend, jdbcType=NUMERIC} / 100,
			   task = #{task, jdbcType=NUMERIC} / 100,
			   etc = #{etc, jdbcType=NUMERIC} / 100
		WHERE
		    lec_code = #{lec_code, jdbcType=VARCHAR} 
	</update>	
	
	<insert id="insertWeeks" parameterType="LectureVO">
		INSERT INTO lec_week_diary 
		(
		    diary_no,
		    lec_code,
		    lec_week,
		    week_bgnde,
		    week_endde,
		    diary_title,
		    diary_cont,
		    week_lec_cl
		    <if test="ut_lec_link != null and @org.apache.commons.lang3.StringUtils@isNotBlank(ut_lec_link)">
			    ,ut_lec_link
		    </if>
		    <if test="rt_lec_link != null and @org.apache.commons.lang3.StringUtils@isNotBlank(rt_lec_link)">
			    ,rt_lec_link
		    </if>
		) VALUES (
		    lec_week_seq.nextval,
		    #{lec_code, jdbcType=VARCHAR},
		    #{lec_week, jdbcType=NUMERIC},
		    #{week_bgnde, jdbcType=DATE},
		    #{week_endde, jdbcType=DATE},
		    #{diary_title, jdbcType=VARCHAR},
		    #{diary_cont, jdbcType=VARCHAR},
		    #{week_lec_cl, jdbcType=VARCHAR}
		    <if test="ut_lec_link != null and @org.apache.commons.lang3.StringUtils@isNotBlank(ut_lec_link)">
			    ,#{ut_lec_link, jdbcType=VARCHAR},
		    </if>
		    <if test="rt_lec_link != null and @org.apache.commons.lang3.StringUtils@isNotBlank(rt_lec_link)">
			    ,#{rt_lec_link, jdbcType=VARCHAR}
		    </if>
		)
	</insert>
	
	<select id="selectWeeksMaxWeek" parameterType="String" resultType="int">
		SELECT
		    COUNT(lec_week)
		FROM
		    lec_week_diary
		WHERE lec_code = #{lec_code, jdbcType=VARCHAR}
	</select>
</mapper>