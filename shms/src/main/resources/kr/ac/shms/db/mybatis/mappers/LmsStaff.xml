<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ac.shms.lms.staff.dao.LmsStaffDAO">
	<select id="staff" parameterType="String" resultType="kr.ac.shms.common.vo.StaffVO">
		SELECT
		    staff_no,
		    dept_code,
		    sub_code,
		    emp_section,
		    encpn_de,
		    retire_de,
		    contract_endde,
		    staff_rspofc,
		    prof_at,
		    name,
		    tel_no,
		    regno1,
		    regno2,
		    gen,
		    zipcode,
		    addr1,
		    addr2,
		    email,
		    webmail,
		    account,
		    bank_name,
		    photo_path
		FROM
		    staff
		WHERE staff_no = #{staff_no, jdbcType=VARCHAR}
	</select>
	
	<select id="selectConsltCnt" parameterType="String" resultType="int">
		SELECT
		    COUNT(*) cnt
		FROM
		    conslt_req
		WHERE staff_no = #{staff_no, jdbcType=VARCHAR}
		  AND process_stat = (SELECT COM_CODE
		                        FROM TB_COM_CODE 
		                       WHERE CODE_GRP = (SELECT CODE_GRP 
		                                           FROM TB_CODE_GRP
		                                          WHERE CODE_GRP_NM = 'PROCESS_STAT')
		                         AND COM_CODE_NM = '대기')
	</select>
	
	<select id="pmyPage" parameterType="String" resultType="PMyPageVO">
		SELECT  staff_no,
		        sub_code,
		        emp_section,
		        TO_CHAR(encpn_de, 'YYYY-MM-DD') encpn_de,
		        TO_CHAR(retire_de, 'YYYY-MM-DD') retire_de,
		        contract_endde,
		        name,
		        tel_no,
		        regno1,
		        regno2,
		        gen,
		        zipcode,
		        addr1,
		        addr2,
		        email,
		        webmail,
		        account,
		        bank_name,
		        photo_path,
		        dean_at
		FROM v_prof_info
		WHERE staff_no = #{staff_no}
	</select>
	
	<select id="subject" parameterType="String" resultType="SubjectVO">
		SELECT
		    sub_code,
		    sub_name,
		    col_code,
		    estbl_de,
		    reg_amt,
		    offrum_loc,
		    tel_no,
		    fax_no,
		    grdtn_pnt,
		    staff_no,
		    sub_index
		FROM
		    subject
		WHERE sub_code = #{sub_code}
	</select>
	
	<update id="webMailUpdate" parameterType="String">
		UPDATE staff
		    SET webmail = #{staff_no}||'@injae.ac.kr'
		WHERE
		    staff_no = #{staff_no}
	</update>
	
	<update id="mypageUpdate" parameterType="StaffVO">
		UPDATE staff
	    SET
	        bank_name = #{bank_name}
	        , account = #{account}    
	        , tel_no = #{tel_no}
	        , email = #{email}      
	        , zipcode = #{zipcode}
	        , addr1 = #{addr1}
	        , addr2 = #{addr2}
		WHERE
		    staff_no = #{staff_no}
	</update>
	
	<select id="staffMyPage" parameterType="String" resultType="SMyPageVO">
		SELECT  user_no staff_no,
				TO_CHAR(bgn_de,'YYYY-MM-DD') encpn_de,
				TO_CHAR(end_de,'YYYY-MM-DD') retire_de,
				TO_CHAR(contract_endde, 'YYYY-MM-DD') contract_endde,
		        uv.dept_code,
		        d.dept_nm, 
		        sub_code,
		        name,
		        tel_no, 
		        regno1, 
		        regno2, 
		        gen, 
		        zipcode,
		        addr1, 
		        addr2, 
		        email, 
		        webmail,
		        account,
		        bank_name,
		        photo_path,
		        rspofc
		FROM V_USERVIEW uv 
		INNER JOIN DEPT d 
		ON uv.dept_code = d.dept_code
		WHERE uv.user_no = #{user_no}
	</select>
	
	<select id="consultingList" parameterType="String" resultType="ConsultingVO">
		SELECT  req_no,
		        consult_cl,
		        b.com_code_nm consult_cl_nm,
		        req_date,
		        TO_CHAR(hope_date, 'YYYY-MM-DD') hope_date,
		        TO_CHAR(hope_date, 'HH24:MI') hope_time,
		        req_cont,
		        process_stat,
		        c.com_code_nm process_stat_nm,
		        a.stdnt_no,
                st.name,
		        refuse_resn,
		        a.staff_no,
                d.name staff_name,
		        conslt_link
		FROM
		    conslt_req a
		INNER JOIN tb_com_code b
		ON(a.consult_cl = b.com_code)
		INNER JOIN tb_com_code c
		ON(a.process_stat = c.com_code)
        INNER JOIN staff d
        ON (a.staff_no = d.staff_no)
        INNER JOIN student st
        ON (a.stdnt_no = st.stdnt_no)
		WHERE b.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'CONSULT_CL')
		  AND c.code_grp = (SELECT code_grp FROM tb_code_grp WHERE code_grp_nm = 'PROCESS_STAT')
		  AND d.staff_no = #{staff_no}
	</select>
	
	<update id="consultingCompanion" parameterType="ConsultingVO">
		UPDATE CONSLT_REQ SET
		    process_stat = 'BR',
		    refuse_resn = #{refuse_resn}
		WHERE req_no = #{req_no}	
	</update>
	
	<update id="consultingApproval" parameterType="int">
		UPDATE CONSLT_REQ SET
		    process_stat = 'SI'
		WHERE req_no = #{req_no}
	</update>
	
	<select id="passwordUpdate" resultType="StaffVO">
		SELECT S.STAFF_NO, S.REGNO1, U.USER_ID aa
		FROM STAFF S
		RIGHT OUTER JOIN USERS U
		ON S.STAFF_NO = U.USER_ID
		WHERE STAFF_NO LIKE 'P%'
	</select>
	
	<update id="passUpdate" parameterType="UserLoginVO">
		UPDATE USERS
		SET USER_PASSWORD = #{user_password}
		WHERE USER_ID = #{user_id}
	</update>

	
	<select id="selectReqClCode" resultType="ComCodeVO">
		SELECT com_code_nm,
		       com_code
		  FROM tb_com_code
		 WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_CL_CODE')
	</select>
	
<sql id="searchFrag">
       <trim prefix="WHERE" prefixOverrides="AND" suffixOverrides="OR">
           <trim prefix="AND (" suffix=")">
               <if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
                      INSTR(stdnt_no, #{searchMap.searchWord}) > 0
                      OR
                      INSTR(name, #{searchMap.searchWord}) > 0
               </if>
           </trim>
           <trim prefix="AND (" suffix=")" prefixOverrides="AND">
               <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.col_code)">
                   AND col_code = #{searchMap.col_code}
               </if>
               <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.sub_code)">
                   AND sub_code = #{searchMap.sub_code}
               </if>
               <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.req_cl_code)">
                   AND req_cl_code = #{searchMap.req_cl_code}
               </if>
           </trim>
       </trim>
    </sql>
	
	<select id="selectReginfoCngStudentList" resultType="RegInfoCngVO" parameterType="PagingVO">
		SELECT *
		  FROM 
		(SELECT A.*, ROW_NUMBER () OVER(ORDER BY req_de DESC) rn
		   FROM (SELECT cng_req_no,
		                d.col_name,
		                c.sub_name,
		                a.stdnt_no,
		                name stdnt_name,
		                TO_CHAR(a.req_de, 'RRRR.MM.DD') req_de,
		                NVL(TO_CHAR(proc_date, 'RRRR.MM.DD'), ' ') proc_date, 
		               (SELECT com_code_nm
		                  FROM tb_com_code
		                 WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_CL_CODE')
		                   AND com_code = req_cl_code) req_cl_code,
		              (SELECT com_code_nm
		                 FROM tb_com_code
		                WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
		                  AND com_code = process_stat) process_stat,
		                d.col_code,
		                c.sub_code,
		                b.name 
		          FROM reginfo_cng a
		         INNER JOIN v_stdntinfo b ON(a.stdnt_no=b.stdnt_no)
		         INNER JOIN subject c ON(b.sub_code=c.sub_code)
		         INNER JOIN college d ON(c.col_code=d.col_code)
		         ORDER BY req_de desc) A
         <include refid="searchFrag"></include>
		  )
		 WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectReginfoCngCount" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
  		  FROM reginfo_cng
	</select>
	
	<select id="selectGisaSchlReqList" resultType="ScholarShipVO">
		SELECT *
		  FROM (
		    (SELECT A.*, ROW_NUMBER () OVER(ORDER BY req_de DESC) rn
		      FROM
		            (SELECT req_no,
		                   b.schlship_nm,
		                   c.name,
		                   TO_CHAR(req_de, 'RRRR.MM.DD') req_de,
		                   CASE WHEN papers_submit_at='Y' THEN '제출'
		                        ELSE '미제출'
		                   END AS papers_submit_at,
		                   TO_CHAR(b.benefit, 'FM999,999,999') benefit,
		                   TO_CHAR(proc_date, 'RRRR.MM.DD') proc_date,
		                   (SELECT com_code_nm
		                             FROM tb_com_code
		                            WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
		                              AND com_code = process_stat) process_stat,
		                   refuse_resn
		              FROM schl_req a
		             INNER JOIN schlship b ON(a.schlship_no=b.schlship_no) 
		             INNER JOIN student c ON(a.stdnt_no=c.stdnt_no)
		             WHERE a.schlship_no=7 or a.schlship_no=8) A
		            )
		        )
	</select>
	<resultMap type="ScholarShipVO" id="schl" autoMapping="true">
		<id property="req_no" column="req_no"/>
		<collection property="attachList" ofType="AttachVO" autoMapping="true">
			<id property="atch_file_no" column="atch_file_no"/>
			<id property="atch_file_seq" column="atch_file_seq"/>
		</collection>
	</resultMap>
	
	<select id="selectGisaSchlReq" parameterType="int" resultMap="schl">
		SELECT a.stdnt_no,
		       name,
		       tel_no,
		       CASE WHEN webmail IS NOT NULL THEN webmail
		            WHEN webmail IS NULL THEN email
		            END AS webmail,
		       req_no,
		       TO_CHAR(req_de, 'RRRR.MM.DD') req_de,
		       schlship_nm,
		       (SELECT com_code_nm
                  FROM tb_com_code
                 WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
                   AND com_code = process_stat) process_stat,
               TO_CHAR(proc_date, 'RRRR.MM.DD') proc_date,
		       b.atch_file_no,
		       atch_file_seq,
		       file_path,
		       file_nm,
		       file_cont_type,
		       file_size,
		       reg_date,
		       reg_user_id,
		       biz_type,
		       save_file_nm
		  FROM student a
		 INNER JOIN schl_req b ON(a.stdnt_no=b.stdnt_no) 
		 INNER JOIN schlship c ON(b.schlship_no=c.schlship_no)
		 LEFT OUTER JOIN attach d ON(b.atch_file_no=d.atch_file_no)
		 WHERE req_no=${req_no, jdbcType=NUMERIC}
	</select>
	
	<update id="updateSchlStatus" parameterType="ScholarShipVO">
		UPDATE schl_req
		   SET process_stat=#{process_stat, jdbcType=VARCHAR}
		   <if test="process_stat eq 'BR'">
			   ,refuse_resn=#{refuse_resn, jdbcType=VARCHAR}
		   </if>
		   <if test="process_stat eq 'SI'">
		   	   ,proc_date=SYSDATE
		   </if>
		 WHERE req_no=#{req_no, jdbcType=NUMERIC}
	</update>
	
	<sql id="academicRegistrationInfo">
		SELECT  
              B.col_code, 
              B.sub_code,
              B.sub_name,
              B.col_name,
              stdnt_no, 
              name,
              regno1,
              decode(gen, 'F', '여자','남자') gen,
              grade,
              semstr,
              reginfo_stat,
              TO_CHAR(entsch_de, 'YYYY.MM.DD') entsch_de
           FROM v_stdntinfo A
            LEFT OUTER JOIN (
              SELECT A.col_code, sub_code, sub_name, B.col_name
              FROM subject A
              INNER JOIN college B ON (A.col_code = B.col_code)
            ) B
            ON A.sub_code = B.sub_code
	</sql>
	<sql id="academicSearchFrag">
		<trim prefix="WHERE" prefixOverrides="AND" suffixOverrides="OR">
			<trim prefix="AND (" suffix=")">
				<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
       				INSTR(stdnt_no, #{searchMap.searchWord}) > 0
       				OR
       				INSTR(name, #{searchMap.searchWord}) > 0
				</if>
			</trim>
			<trim prefix="AND (" suffix=")" prefixOverrides="AND">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.reginfo_stat)">
					AND reginfo_stat = #{searchMap.reginfo_stat}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.col_code)">
					AND col_code = #{searchMap.col_code}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.sub_code)">
					AND sub_code = #{searchMap.sub_code}
				</if>
			</trim>
		</trim>
	</sql>
	<select id="selectAcademicRegistrationList" parameterType="PagingVO" resultType="AcademicRegistrationVO">
		SELECT *
		    FROM (
		    SELECT A.*, ROWNUM rn
		        FROM (
		            <include refid="academicRegistrationInfo" />
		        ) A
	          <include refid="academicSearchFrag" />
	          ORDER BY A.sub_name
		    )
		WHERE rn BETWEEN #{startRow} AND #{endRow}
		ORDER BY stdnt_no DESC
	</select>
	
	<select id="selectAcademicRegistrationCount" resultType="int">
<!-- 		SELECT COUNT(*) -->
<!-- 		FROM v_stdntinfo A -->
<!-- 		LEFT OUTER JOIN ( -->
<!-- 		  SELECT A.col_code, sub_code, sub_name, B.col_name -->
<!-- 		  FROM subject A -->
<!-- 		  INNER JOIN college B ON (A.col_code = B.col_code) -->
<!-- 		) B -->
<!-- 		ON A.sub_code = B.sub_code -->
		SELECT COUNT(*)
		    FROM (
		    SELECT A.*, ROWNUM rn
		        FROM (
		            <include refid="academicRegistrationInfo" />
		        ) A
	          <include refid="academicSearchFrag" />
	          ORDER BY A.sub_name
		    )
	</select>
	
	<select id="selectAcademicRegistrationInfo" resultType="AcademicRegistrationVO">
		<include refid="academicRegistrationInfo" />			
	</select>
	
	<sql id="fresherSearchFrag">
		<trim prefix="WHERE" prefixOverrides="AND" suffixOverrides="OR">
			<trim prefix="AND (" suffix=")">
				<if test="searchMap!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.searchWord)">
					<choose>
						<when test="searchMap.searchType eq 'applicnt_no'">
							INSTR(applicnt_no, #{searchMap.searchWord}) > 0
						</when>
						<when test="searchMap.searchType eq 'name'">
							INSTR(name, #{searchMap.searchWord}) > 0
						</when>
						<when test="searchMap.searchType eq 'telno'">
							INSTR(telno, #{searchMap.searchWord}) > 0
						</when>
						<when test="searchMap.searchType eq 'email'">
							INSTR(email, #{searchMap.searchWord}) > 0
						</when>
						<otherwise><!-- default -->
	          				INSTR(applicnt_no, #{searchMap.searchWord}) > 0
	          				OR
	          				INSTR(name, #{searchMap.searchWord}) > 0
	          				OR
	          				INSTR(telno, #{searchMap.searchWord}) > 0
	          				OR
	          				INSTR(email, #{searchMap.searchWord}) > 0
	          			</otherwise>
					</choose>
				</if>
			</trim>
			<trim prefix="AND (" suffix=")" prefixOverrides="AND">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.col_code)">
					AND col_code = #{searchMap.col_code}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(searchMap.sub_code)">
					AND sub_code = #{searchMap.sub_code}
				</if>
			</trim>
		</trim>
	</sql>
	
	<select id="selectFresherCount" parameterType="PagingVO" resultType="int">
		 SELECT COUNT(*)
		  FROM (SELECT A.*, ROWNUM rn    
		          FROM (SELECT  applicnt_no,
		                        name,
		                        regno1,
		                        gen,
		                        telno,
		                        email,
		                        b.sub_code,
		                        b.sub_name,
		                        rcrt_year,
		                        (SELECT col_name
		                           FROM college
		                          WHERE col_code = b.col_code) col_name,
		                        b.col_code
		                  FROM applicant a
		                       INNER JOIN subject b ON(a.sub_code = b.sub_code)
		                 WHERE rcrt_year > EXTRACT(YEAR FROM SYSDATE)
		                 ) A
		         <include refid="fresherSearchFrag" />
		         ORDER BY applicnt_no asc
		 )
	</select>
	
	<select id="selectFresherList" parameterType="PagingVO" resultType="ApplicantVO">
		SELECT *
		  FROM (SELECT A.*, ROWNUM rn    
		          FROM (SELECT  applicnt_no,
		                        name,
		                        regno1,
		                        gen,
		                        telno,
		                        email,
		                        b.sub_code,
		                        b.sub_name,
		                        rcrt_year,
		                        (SELECT col_name
		                           FROM college
		                          WHERE col_code = b.col_code) col_name,
		                        b.col_code
		                  FROM applicant a
		                       INNER JOIN subject b ON(a.sub_code = b.sub_code)
		                 WHERE rcrt_year > EXTRACT(YEAR FROM SYSDATE)
		                 ) A
				 <include refid="fresherSearchFrag" />
		         ORDER BY applicnt_no asc
		 )
		 WHERE rn BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectFresherAllList" resultType="ApplicantVO">
		 SELECT  applicnt_no,
                 name,
                 regno1,
                 gen,
                 telno,
                 email,
                 b.sub_code,
                 b.sub_name,
                 rcrt_year,
                 (SELECT col_name
                    FROM college
                   WHERE col_code = b.col_code) col_name,
                 b.col_code
           FROM applicant a
                INNER JOIN subject b ON(a.sub_code = b.sub_code)
          WHERE rcrt_year > EXTRACT(YEAR FROM SYSDATE)
          ORDER BY sub_code asc, name asc
	</select>
	
	<resultMap type="RegInfoCngVO" id="cng" autoMapping="true">
		<id property="cng_req_no" column="cng_req_no"/>
		<collection property="attachList" ofType="AttachVO" autoMapping="true">
			<id property="atch_file_no" column="atch_file_no"/>
			<id property="atch_file_seq" column="atch_file_seq"/>
		</collection>
	</resultMap>
	<select id="selectCngStdnt" parameterType="int" resultMap="cng">
		SELECT a.stdnt_no,
		       name stdnt_name,
		       a.tel_no,
		       CASE WHEN webmail IS NOT NULL THEN webmail
		            WHEN webmail IS NULL THEN email
		            END AS webmail,
		       cng_req_no,
		       TO_CHAR(req_de, 'RRRR.MM.DD') req_de,
		       (SELECT com_code_nm
		          FROM tb_com_code
		         WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_CL_CODE')
		           AND com_code = req_cl_code) req_cl_code,
		      (SELECT com_code_nm
		          FROM tb_com_code
		         WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'REQ_RESN_CODE')
		           AND com_code = req_resn_code) req_resn_code,
		      (SELECT com_code_nm
		         FROM tb_com_code
		        WHERE CODE_GRP = (SELECT CODE_GRP FROM TB_CODE_GRP WHERE CODE_GRP_NM = 'PROCESS_STAT')
		          AND com_code = process_stat) process_stat,
		       TO_CHAR(cng_bgnde, 'RRRR.MM.DD') cng_bgnde,
		       TO_CHAR(proc_date, 'RRRR.MM.DD') proc_date,
		       c.atch_file_no,
		       atch_file_seq,
		       file_path,
		       file_nm,
		       file_cont_type,
		       file_size,
		       reg_date,
		       reg_user_id,
		       biz_type,
		       save_file_nm
		  FROM student a
		 INNER JOIN reginfo_cng b ON(a.stdnt_no=b.stdnt_no) 
		 LEFT OUTER JOIN attach c ON(b.atch_file_no=c.atch_file_no)
		 WHERE cng_req_no=#{cng_req_no, jdbcType=NUMERIC}
	</select>

	<update id="updateReginfoCng" parameterType="RegInfoCngVO">
		UPDATE reginfo_cng
		   SET process_stat=#{process_stat, jdbcType=VARCHAR}
		   <if test="process_stat eq 'BR'">
			   ,refuse_resn=#{refuse_resn, jdbcType=VARCHAR}
		   </if>
		   <if test="process_stat eq 'SI'">
		   	   ,proc_date=SYSDATE
		   </if>
		 WHERE cng_req_no=#{cng_req_no, jdbcType=NUMERIC}
	</update>
	
	<insert id="insertUser" parameterType="ApplicantVO">
		INSERT INTO users
			(
			    user_id,
			    user_password,
			    user_section
			) SELECT #{stdnt_no, jdbcType=VARCHAR},	
			         #{user_password, jdbcType=VARCHAR},
			         'ST'
			    FROM applicant
			   WHERE applicnt_no = #{applicnt_no, jdbcType=VARCHAR}
	</insert>
	
	<insert id="insertStudent" parameterType="ApplicantVO">
		INSERT INTO student
			(
			    stdnt_no,
			    sub_code,
			    entsch_de,
			    grdtn_de,
			    empmnt_at,
			    grade,
			    name,
			    tel_no,
			    regno1,
			    regno2,
			    gen,
			    zipcode,
			    addr1,
			    addr2,
			    email,
			    webmail,
			    account,
			    bank_name,
			    photo_path,
			    semstr
			) SELECT 
			        #{stdnt_no, jdbcType=VARCHAR},
			        sub_code,
			        TO_DATE(#{entsch_de, jdbcType=VARCHAR}, 'YYYY-MM-DD'),
			        NULL,
			        'N',
			        1,
			        name,
			        telno,
			        regno1,
			        regno2,
			        gen,
			        zipcode,
			        addr1,
			        addr2,
			        email,
			        NULL,
			        account,
			        bank_name,
			        photo_path,
			        1
			FROM applicant
			WHERE applicnt_no = #{applicnt_no, jdbcType=VARCHAR}
	</insert>
	
	<select id="selectFresher" parameterType="String" resultType="ApplicantVO">
		SELECT  applicnt_no,
			    name,
			    regno1,
			    regno2,
			    addr1,
			    addr2,
			    gen,
			    zipcode,
			    telno,
			    email,
			    hischul_code,
			    comput_score,
			    aplc_de,
			    pass_at,
			    pre_no,
			    rcrt_cl,
			    rcrt_type,
			    account,
			    bank_name,
			    photo_path,
			    sub_code,
			    rcrt_year,
			    reg_pay_at,
			    virtual_account,
			    reg_pay_date
		   FROM applicant
	      WHERE applicnt_no = #{applicnt_no, jdbcType=VARCHAR}
	</select>
</mapper>